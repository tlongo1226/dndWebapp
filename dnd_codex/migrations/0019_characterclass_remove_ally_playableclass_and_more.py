# Generated by Django 4.2.1 on 2023-06-15 03:00

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dnd_codex', '0018_rename_playable_class_ally_playableclass_and_more'),
    ]

    operations = [
        
        migrations.RemoveField(
            model_name='ally',
            name='playableclass',
        ),
        migrations.RemoveField(
            model_name='creature',
            name='playableclass',
        ),
        migrations.RemoveField(
            model_name='enemy',
            name='playableclass',
        ),
        migrations.RemoveField(
            model_name='race',
            name='instance_count',
        ),
        migrations.AlterField(
            model_name='ally',
            name='date_modified',
            field=models.DateTimeField(verbose_name=datetime.datetime(2023, 6, 14, 22, 0, 44, 490588)),
        ),
        migrations.AlterField(
            model_name='creature',
            name='date_modified',
            field=models.DateTimeField(verbose_name=datetime.datetime(2023, 6, 14, 22, 0, 44, 492588)),
        ),
        migrations.AlterField(
            model_name='enemy',
            name='date_modified',
            field=models.DateTimeField(verbose_name=datetime.datetime(2023, 6, 14, 22, 0, 44, 488588)),
        ),
        migrations.DeleteModel(
            name='PlayableClass',
        ),
        migrations.AddField(
            model_name='ally',
            name='characterClass',
            field=models.ManyToManyField(blank='True', help_text='Enter a class for this character or leave blank if it is not known', to='dnd_codex.characterclass'),
        ),
        migrations.AddField(
            model_name='creature',
            name='characterClass',
            field=models.ManyToManyField(blank='True', help_text='Enter a class for this character or leave blank if it is not known', to='dnd_codex.characterclass'),
        ),
        migrations.AddField(
            model_name='enemy',
            name='characterClass',
            field=models.ManyToManyField(blank='True', help_text='Enter a class for this character or leave blank if it is not known', to='dnd_codex.characterclass'),
        ),
    ]
